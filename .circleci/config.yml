version: 2.1

orbs:
  docker: circleci/docker@1.5.0

jobs:
  run_tests:
    working_directory: ~/react-app
    docker:
      - image: circleci/node:latest
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm-install
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
#      - run:
#         name: test
#         command: npm test
  build_docker_image:
   executor: docker/docker
#    auth:
#          username: $CCI_USERNAME
#          password: $CCI_PASSWORD
   steps:
      - setup_remote_docker
      - checkout
      - run: docker --version
#      - setup_remote_docker:
#          docker_layer_caching: true
#      - run:
#          name: Setup Tag
#	   command: echo "export TAG-0.1.$CIRCLE_SHA1" >> $BASH_ENV
      - run:
          name: Build docker image
          command: docker build -t ci-image:latest .  
# run_integration_tests:
#   docker:
#     - image: circleci/node:13.10.1
#   steps:
#     - checkout
  docker/publish:
    docker:
      - image: circleci/golang:1.15
        auth:
          username: harishvarma44
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      # ... steps for building/testing app ...

      - setup_remote_docker:
          version: 19.03.13
#          docker_layer_caching: true
      # build the application image
      - run: docker build -t DOCKERHUB_USERNAME/ci-demo-docker .
      # build and push Docker image
      - run:  |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
      # Rename image to push registry docker.io
      - run: docker image tag $DOCKERHUB_USERNAME/ci-demo-docker $DOCKERHUB_USERNAME/ci-demo-docker:$CIRCLE_BUILD_NUM
      # Push the image to registry docker.io
      - run: docker push $DOCKERHUB_USERNAME/ci-demo-docker:$CIRCLE_BUILD_NUM
      # Run docker image
      - run: docker run -p 3002:80 -it $DOCKERHUB_USERNAME/ci-demo-docker:$CIRCLE_BUILD_NUM
  
  deploy_docker_appn:
   executor: docker/docker
#    auth:
#          username: $CCI_USERNAME
#          password: $CCI_PASSWORD
   steps:
      - setup_remote_docker
      - checkout
#      - run: docker --version
#      - setup_remote_docker:
#          docker_layer_caching: true
#      - run:
#          name: Setup Tag
#	   command: echo "export TAG-0.1.$CIRCLE_SHA1" >> $BASH_ENV
      - run:
          name: Pull docker image from dockerhub
          command: docker pull harishvarma44/ci-demo-docker:$CIRCLE_BUILD_NUM && docker run -p 3002:80 -t harishvarma44/ci-demo-docker:$CIRCLE_BUILD_NUM
      - run:
          name: deploy built docker image
          command: docker run -p 3002:80 -t harishvarma44/ci-demo-docker:$CIRCLE_BUILD_NUM
workflows:
  version: 2
  build_test:
    jobs:
       - run_tests
#      - node/test:
#          matrix:
#	    parameters:
#	      version:
#	        - 14.0.0
#		- 13.11.0
#		- 12.16.0
       - docker/publish:
          image: $DOCKERHUB_USERNAME/ci-demo-docker
          tag: $CIRCLE_BUILD_NUM
#          dockerfile: Dockerfile
          context:
            - DOCKERHUB
          use-docker-credentials-store: true
          requires:
           - build_docker_image
          filters:
            branches:
              only: 
               - master
       - build_docker_image:
          requires:
            - run_tests
       - deploy_docker_appn:
          requires:
            - docker/publish
